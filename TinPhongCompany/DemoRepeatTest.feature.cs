// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TinPhongCompany
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Create a new door item with loop data")]
    public partial class CreateANewDoorItemWithLoopDataFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DemoRepeatTest.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Create a new door item with loop data", "  In order to add new door to db\r\n  As a site administrator\r\n  I want to be able " +
                    "to create, view and manage door item records", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
  testRunner.Given("I am logged into the site as an administrators", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a new door item with data below")]
        [NUnit.Framework.TestCaseAttribute("Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt tại TPHCM", "KL001", "Cửa đi KINGLONG 2 cánh trượt , chất lượng cao", "/Assets/Images/logo.jpg", "1900000", "1890000", "1", "Cửa đi KINGLONG 2 cánh trượt , chất lượng cao", "12", "Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt tại TPHCM, quận 10, quận Thủ đức, Bình Thạnh", "true", "1000", "Danh Sách Sản Phẩm", new string[0])]
        [NUnit.Framework.TestCaseAttribute("", "Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt tại TPHCM", "KL001", "Cửa đi KINGLONG 2 cánh trượt , chất lượng cao", "/Assets/Images/logo.jpg", "-1900000", "1890000", "1", "Cửa đi KINGLONG 2 cánh trượt , chất lượng cao", "12", "Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt tại TPHCM, quận 10, quận Thủ đức, Bình Thạnh", "true", "1000", "Thêm Sản Phẩm", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt tại TPHCM", "KL001", "Cửa đi KINGLONG 2 cánh trượt , chất lượng cao", "/Assets/Images/logo.jpg", "1900000", "1890000", "1", "Cửa đi KINGLONG 2 cánh trượt , chất lượng cao", "12", "Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt tại TPHCM, quận 10, quận Thủ đức, Bình Thạnh", "true", "1000", "Thêm Sản Phẩm", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt tại TPHCM", "KL001", "Cửa đi KINGLONG 2 cánh trượt , chất lượng cao", "/Assets/Images/logo.jpg", "1900000", "1890000", "1", "Cửa đi KINGLONG 2 cánh trượt , chất lượng cao", "12", "Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt tại TPHCM, quận 10, quận Thủ đức, Bình Thạnh", "true", "-1000", "Thêm Sản Phẩm", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt tại TPHCM", "KL001", "Cửa đi KINGLONG 2 cánh trượt , chất lượng cao", "", "1900000", "1890000", "1", "Cửa đi KINGLONG 2 cánh trượt , chất lượng cao", "12", "Cửa đi KINGLONG 2 cánh trượt", "Cửa đi KINGLONG 2 cánh trượt tại TPHCM, quận 10, quận Thủ đức, Bình Thạnh", "true", "1000", "Thêm Sản Phẩm", new string[0])]
        public virtual void CreateANewDoorItemWithDataBelow(
                    string name, 
                    string metaTitle, 
                    string seoTitle, 
                    string code, 
                    string description, 
                    string image, 
                    string price, 
                    string promotionPrice, 
                    string categoryID, 
                    string productDetail, 
                    string waranty, 
                    string metaKeywords, 
                    string metaDescriptions, 
                    string status, 
                    string viewCount, 
                    string result, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a new door item with data below", exampleTags);
#line 10
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 11
  testRunner.When("I go to  add product page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
  testRunner.And(string.Format("I enter the following information {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10}  {" +
                        "11} {12} {13} {14}", name, metaTitle, seoTitle, code, description, image, price, promotionPrice, categoryID, productDetail, waranty, metaKeywords, metaDescriptions, status, viewCount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
  testRunner.And("I will click the \"Thêm\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
  testRunner.Then(string.Format("I should see view {0}", result), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
